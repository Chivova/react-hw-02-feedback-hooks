{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","onLeaveFeedback","className","s","btn","type","name","onClick","Statistics","good","neutral","bad","totalFeedback","positiveFeedbackPercentage","statisticsList","statisticsItem","totalFeedbackText","perFeedbackText","Section","title","children","Notification","message","protoType","PropTypes","string","isRequired","node","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","currentTarget","state","total","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qPAKe,SAASA,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,eAAC,WAAD,WACE,wBACEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,KAAK,OACLC,QAASN,EAJX,kBAQA,wBACEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,KAAK,UACLC,QAASN,EAJX,qBAQA,wBACEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,KAAK,MACLC,QAASN,EAJX,oB,oBCnBS,SAASO,EAAT,GAMX,IAAD,IALDC,YAKC,MALM,EAKN,MAJDC,eAIC,MAJS,EAIT,MAHDC,WAGC,MAHK,EAGL,MAFDC,qBAEC,MAFe,EAEf,MADDC,kCACC,MAD4B,EAC5B,EACD,OACE,eAAC,WAAD,WACE,qBAAIX,UAAWC,IAAEW,eAAjB,UACE,qBAAIZ,UAAWC,IAAEY,eAAjB,mBAAwCN,KACxC,qBAAIP,UAAWC,IAAEY,eAAjB,sBAA2CL,KAC3C,qBAAIR,UAAWC,IAAEY,eAAjB,kBAAuCJ,QAEzC,oBAAGT,UAAWC,IAAEa,kBAAhB,oBAA2CJ,KAC3C,oBAAGV,UAAWC,IAAEc,gBAAhB,gCACsBJ,EADtB,U,oBCjBS,SAASK,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAAC,WAAD,WACE,6BAAKD,IACJC,KCLQ,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,6BAAKA,IDSdJ,EAAQK,UAAY,CAClBJ,MAAOK,IAAUC,OAAOC,WACxBN,SAAUI,IAAUG,KAAKD,Y,MELZ,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOlB,EAAP,KAAYqB,EAAZ,KAuBMC,EAAqB,kBAAMxB,EAAOC,EAAUC,GAQlD,OACE,eAAC,WAAD,WACE,cAACO,EAAD,CAASC,MAAM,wBAAf,SACE,cAACnB,EAAD,CAAiBC,gBAhCD,SAAAiC,GAGpB,OAFiBA,EAAEC,cAAX7B,MAGN,IAAK,OACHwB,GAAQ,SAAAM,GAAK,OAAIA,EAAQ,KACzB,MAEF,IAAK,UACHL,GAAW,SAAAK,GAAK,OAAIA,EAAQ,KAC5B,MAEF,IAAK,MACHJ,GAAO,SAAAI,GAAK,OAAIA,EAAQ,KACxB,MAEF,QACE,aAiBDH,IACC,cAACf,EAAD,CAASC,MAAM,aAAf,SACE,cAACX,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,cAAeqB,IACfpB,2BAlB8B,WACtC,IAAMwB,EAAQJ,IAEd,OAAOK,KAAKC,MAAO9B,EAAO4B,EAAS,KAeCG,OAIhC,cAACnB,EAAD,CAAcC,QAAQ,yBCtD9BmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,eAAiB,mCAAmC,kBAAoB,sCAAsC,gBAAkB,sC,kBCAtMD,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.152600e1.chunk.js","sourcesContent":["import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions({ onLeaveFeedback }) {\n  return (\n    <Fragment>\n      <button\n        className={s.btn}\n        type=\"button\"\n        name=\"good\"\n        onClick={onLeaveFeedback}\n      >\n        Good\n      </button>\n      <button\n        className={s.btn}\n        type=\"button\"\n        name=\"neutral\"\n        onClick={onLeaveFeedback}\n      >\n        Neutral\n      </button>\n      <button\n        className={s.btn}\n        type=\"button\"\n        name=\"bad\"\n        onClick={onLeaveFeedback}\n      >\n        Bad\n      </button>\n    </Fragment>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good = 0,\n  neutral = 0,\n  bad = 0,\n  totalFeedback = 0,\n  positiveFeedbackPercentage = 0,\n}) {\n  return (\n    <Fragment>\n      <ul className={s.statisticsList}>\n        <li className={s.statisticsItem}>Good: {good}</li>\n        <li className={s.statisticsItem}>Neutral: {neutral}</li>\n        <li className={s.statisticsItem}>Bad: {bad}</li>\n      </ul>\n      <p className={s.totalFeedbackText}>Total: {totalFeedback}</p>\n      <p className={s.perFeedbackText}>\n        Positive feedback: {positiveFeedbackPercentage}%\n      </p>\n    </Fragment>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  totalFeedback: PropTypes.number.isRequired,\n  positiveFeedbackPercentage: PropTypes.number.isRequired,\n};\n","import { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Section({ title, children }) {\n  return (\n    <Fragment>\n      <h1>{title}</h1>\n      {children}\n    </Fragment>\n  );\n}\n\nSection.protoType = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return <h2>{message}</h2>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { Fragment, useState } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nimport 'modern-normalize/modern-normalize.css';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const leaveFeedback = e => {\n    const { name } = e.currentTarget;\n\n    switch (name) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n\n    return Math.round((good / total) * 100);\n  };\n\n  return (\n    <Fragment>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={leaveFeedback} />\n      </Section>\n      {countTotalFeedback() ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            totalFeedback={countTotalFeedback()}\n            positiveFeedbackPercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </Fragment>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__3G1N4\",\"statisticsItem\":\"Statistics_statisticsItem__K6iB_\",\"totalFeedbackText\":\"Statistics_totalFeedbackText__qReAf\",\"perFeedbackText\":\"Statistics_perFeedbackText__bobYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2soxC\"};"],"sourceRoot":""}